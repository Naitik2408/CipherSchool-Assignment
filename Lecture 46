binary trees

Sum of all nodes 
count number od nodes

code ->


class Node {
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data=data;
        this.left=null;
        this.right=null;
    }
}
public class binaryTree {
    Node root;
    binaryTree(int data){
        this.root=new Node(data);
    }
    int treeSum(Node root){
//         base condition
        if (root==null){
            return 0;
        }
        return root.data + treeSum(root.left) + treeSum(root.right);
    }

    int countNodes(Node root){
//         base condition
        if (root==null){
            return 0;
        }
        return 1 + countNodes(root.left) + countNodes(root.right);
    }
    public static void main(String[] args) {
        binaryTree bt = new binaryTree(2);
        bt.root.left= new Node(3);
        bt.root.right= new Node(5);
        bt.root.left.right= new Node(9);
        bt.root.right.left= new Node(7);
System.out.println(bt.treeSum(bt.root));
        System.out.println(bt.countNodes(bt.root));
    }
}


output->
26
5
