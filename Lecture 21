find max and min element in array
 practice code ->
public class Solution {
    public int[] findMaxMin(int[] nums) {
       

        int max = nums[0];
        int min = nums[0];

        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > max) {
                max = nums[i];
            } else if (nums[i] < min) {
                min = nums[i];
            }
        }

        return new int[]{max, min};
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = {3, 5, 1, 2, 4, 8};
        int[] result = solution.findMaxMin(nums);
        System.out.println("Max: " + result[0] + ", Min: " + result[1]);
    }
}

practice code->
Max: 8, Min: 1


Selection sort ->

public class Solution {
    public void selectionSort(int[] nums) {
        int n = nums.length;

        for (int i = 0; i < n - 1; i++) {
            // Find the minimum element in the unsorted part
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (nums[j] < nums[minIndex]) {
                    minIndex = j;
                }
            }

            // Swap the found minimum element with the first element of the unsorted part
            int temp = nums[minIndex];
            nums[minIndex] = nums[i];
            nums[i] = temp;
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = {64, 34, 25, 12, 22, 11, 90};
        System.out.println("Unsorted array:");
        for (int num : nums) {
            System.out.print(num + " ");
        }

        solution.selectionSort(nums);

        System.out.println("\nSorted array:");
        for (int num : nums) {
            System.out.print(num + " ");
        }
    }
}
output->
Unsorted array:
64 34 25 12 22 11 90 
Sorted array:
11 12 22 25 34 64 90


String ->
practice code '
public class StringComparison {
    public static void main(String[] args) {
        // Using string literals
        String str1 = "hello";
        String str2 = "hello";

        // Using string constructors
        String str3 = new String("hello");
        String str4 = new String("hello");

        // Comparing using ==
        System.out.println("Comparing using == with string literals:");
        System.out.println("str1 == str2: " + (str1 == str2)); // true
        System.out.println("str1 == str3: " + (str1 == str3)); // false
        System.out.println("str3 == str4: " + (str3 == str4)); // false
    }
}
output->
Comparing using == with string literals:
str1 == str2: true
str1 == str3: false
str3 == str4: false

checking if the value of string are equal ->
practice code->

public class StringComparison {
    public static void main(String[] args) {
        String str1 = "hello";
        String str2 = "hello";

        // Using equals() to check if strings are equal by value
        boolean areEqual = str1.equals(str2);

        // Print the result
        System.out.println("Are strings equal by value? " + areEqual);
    }
}
output->
Are strings equal by value? true
